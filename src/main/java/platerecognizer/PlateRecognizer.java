/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package platerecognizer;
import com.openalpr.jni.Alpr;
import com.openalpr.jni.AlprPlate;
import com.openalpr.jni.AlprPlateResult;
import com.openalpr.jni.AlprResults;
import java.util.concurrent.locks.ReentrantReadWriteLock;

import java.lang.Thread;

public class PlateRecognizer {
		static ReentrantReadWriteLock lock = new ReentrantReadWriteLock();
		public void recognize(String filename) {
			lock.writeLock().lock();
			Alpr alpr = new Alpr("us", "openalpr.conf", "runtime_data");
			lock.writeLock().unlock();
			// Set top N candidates returned to 20
			alpr.setTopN(20);

			// Set pattern to Maryland
			//alpr.setDefaultRegion("md");
			lock.writeLock().lock();
			AlprResults results = null;
			try {
				results = alpr.recognize(filename);
			} catch (Exception e) {
				Thread.currentThread().interrupt();
			}
			lock.writeLock().unlock();
			/*
			System.out.format("  %-15s%-8s\n", "Plate Number", "Confidence");
			for (AlprPlateResult result : results.getPlates())
			{
				for (AlprPlate plate : result.getTopNPlates()) {
					if (plate.isMatchesTemplate())
						System.out.print("  * ");
					else
						System.out.print("  - ");
					System.out.format("%-15s%-8f\n", plate.getCharacters(), plate.getOverallConfidence());
				}
			}
			*/
			lock.writeLock().lock();
			alpr.unload();
			lock.writeLock().unlock();
		}
}
